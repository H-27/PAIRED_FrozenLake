import numpy as np

map_ten_x_ten_test_training = np.array([ ['H', 'F', 'H', 'F', 'F', 'S', 'F', 'H', 'F', 'H'],
                                         ['H', 'F', 'H', 'F', 'F', 'H', 'H', 'F', 'H', 'F'],
                                         ['F', 'F', 'H', 'F', 'F', 'F', 'F', 'F', 'F', 'F'],
                                         ['F', 'F', 'H', 'F', 'H', 'H', 'F', 'F', 'F', 'F'],
                                         ['F', 'F', 'F', 'F', 'F', 'H', 'F', 'H', 'F', 'H'],
                                         ['F', 'F', 'F', 'H', 'F', 'H', 'F', 'F', 'F', 'F'],
                                         ['F', 'F', 'H', 'F', 'F', 'F', 'F', 'F', 'H', 'F'],
                                         ['H', 'F', 'H', 'H', 'H', 'F', 'F', 'H', 'F', 'H'],
                                         ['F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F'],
                                         ['H', 'F', 'G', 'F', 'F', 'F', 'F', 'F', 'F', 'F']])

thirty_blocks_room= np.array([ ['H', 'F', 'H', 'F', 'F', 'S', 'F', 'H', 'F', 'H'],
                                         ['H', 'F', 'H', 'F', 'F', 'H', 'H', 'F', 'H', 'F'],
                                         ['F', 'F', 'H', 'F', 'F', 'F', 'F', 'F', 'F', 'F'],
                                         ['F', 'F', 'H', 'F', 'H', 'H', 'F', 'F', 'F', 'F'],
                                         ['F', 'F', 'F', 'F', 'F', 'H', 'F', 'H', 'F', 'H'],
                                         ['F', 'F', 'F', 'H', 'F', 'H', 'F', 'F', 'F', 'F'],
                                         ['F', 'F', 'H', 'F', 'F', 'F', 'F', 'F', 'H', 'F'],
                                         ['H', 'F', 'H', 'H', 'H', 'F', 'F', 'H', 'F', 'H'],
                                         ['F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F'],
                                         ['H', 'F', 'G', 'F', 'F', 'F', 'F', 'H', 'H', 'H']])

six_rooms_map = np.array([
    ['F', 'F', 'F', 'H', 'F', 'F', 'H', 'F', 'F', 'F'],
    ['F', 'F', 'F', 'H', 'F', 'F', 'H', 'F', 'F', 'F'],
    ['F', 'F', 'F', 'H', 'F', 'F', 'H', 'F', 'F', 'F'],
    ['H', 'H', 'F', 'H', 'H', 'F', 'H', 'F', 'H', 'H'],
    ['F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F'],
    ['F', 'F', 'H', 'H', 'H', 'H', 'H', 'F', 'F', 'F'],
    ['F', 'F', 'F', 'F', 'F', 'F', 'H', 'F', 'F', 'F'],
    ['F', 'F', 'F', 'H', 'F', 'F', 'H', 'F', 'F', 'F'],
    ['F', 'S', 'F', 'H', 'F', 'F', 'H', 'F', 'G', 'F'],
    ['F', 'F', 'F', 'H', 'F', 'F', 'H', 'F', 'F', 'F']
])

four_rooms_map = np.array([
    ['S', 'F', 'F', 'F', 'H', 'F', 'F', 'F', 'F', 'F'],
    ['F', 'F', 'F', 'F', 'H', 'F', 'F', 'F', 'F', 'F'],
    ['F', 'F', 'F', 'F', 'H', 'F', 'F', 'F', 'F', 'F'],
    ['H', 'F', 'F', 'H', 'H', 'H', 'H', 'F', 'F', 'H'],
    ['F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F'],
    ['F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F'],
    ['H', 'F', 'F', 'H', 'H', 'H', 'H', 'F', 'F', 'H'],
    ['F', 'F', 'F', 'F', 'H', 'F', 'F', 'F', 'F', 'F'],
    ['F', 'F', 'F', 'F', 'H', 'F', 'F', 'F', 'F', 'F'],
    ['F', 'F', 'F', 'F', 'H', 'F', 'F', 'F', 'F', 'G']])
labyrinth = np.array([
    ['S', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F'],
    ['H', 'H', 'H', 'H', 'H', 'H', 'H', 'F', 'H', 'H'],
    ['F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'H', 'F'],
    ['F', 'H', 'H', 'H', 'H', 'F', 'H', 'H', 'H', 'F'],
    ['F', 'H', 'F', 'F', 'F', 'F', 'H', 'F', 'H', 'F'],
    ['F', 'H', 'F', 'H', 'H', 'H', 'H', 'F', 'H', 'F'],
    ['F', 'H', 'F', 'F', 'F', 'F', 'H', 'F', 'H', 'F'],
    ['F', 'H', 'H', 'H', 'H', 'F', 'H', 'F', 'H', 'F'],
    ['F', 'F', 'F', 'F', 'H', 'F', 'F', 'F', 'F', 'F'],
    ['F', 'H', 'H', 'H', 'H', 'H', 'H', 'H', 'H', 'G']
])
maze = np.array([
    ['S', 'F', 'H', 'F', 'F', 'F', 'H', 'F', 'H', 'G'],
    ['H', 'F', 'H', 'F', 'H', 'H', 'H', 'F', 'H', 'F'],
    ['F', 'F', 'F', 'F', 'H', 'F', 'F', 'F', 'H', 'F'],
    ['F', 'H', 'H', 'H', 'H', 'F', 'H', 'H', 'H', 'F'],
    ['F', 'H', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F'],
    ['F', 'F', 'F', 'H', 'H', 'H', 'H', 'F', 'H', 'H'],
    ['F', 'H', 'H', 'H', 'F', 'F', 'F', 'F', 'F', 'F'],
    ['F', 'F', 'F', 'H', 'F', 'H', 'H', 'H', 'H', 'H'],
    ['F', 'H', 'H', 'H', 'F', 'F', 'F', 'F', 'F', 'F'],
    ['F', 'F', 'F', 'F', 'F', 'H', 'H', 'H', 'H', 'H']
])
# for testing only
unsolvable = np.array([                  ['H', 'F', 'H', 'F', 'H', 'S', 'H', 'H', 'F', 'H'],
                                         ['H', 'F', 'H', 'F', 'H', 'H', 'H', 'F', 'H', 'F'],
                                         ['F', 'F', 'H', 'F', 'F', 'F', 'F', 'F', 'F', 'F'],
                                         ['F', 'F', 'H', 'F', 'H', 'H', 'F', 'F', 'F', 'F'],
                                         ['F', 'F', 'F', 'F', 'F', 'H', 'F', 'H', 'F', 'H'],
                                         ['F', 'F', 'F', 'H', 'F', 'H', 'F', 'F', 'F', 'F'],
                                         ['F', 'F', 'H', 'F', 'F', 'F', 'F', 'F', 'H', 'F'],
                                         ['H', 'F', 'H', 'H', 'H', 'F', 'F', 'H', 'F', 'H'],
                                         ['F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F'],
                                         ['H', 'F', 'G', 'F', 'F', 'F', 'F', 'F', 'F', 'F']]
                        )

plain = np.array([
    ['S', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F'],
    ['F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F'],
    ['F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F'],
    ['F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F'],
    ['F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F'],
    ['F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F'],
    ['F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F'],
    ['F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F'],
    ['F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F'],
    ['F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'F', 'G']])

initial_test = np.array([['S', 'F', 'F', 'F'], ['F', 'H', 'F', 'H'], ['F', 'F', 'F', 'H'], ['H', 'F', 'F', 'G']])